{"version":3,"file":"static/js/656.0cda0cf9.chunk.js","mappings":"2QAGaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0O,SCSlB,EATiB,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACtB,OACE,UAACJ,EAAD,CAAOG,GAAIA,EAAX,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,kBCLYE,EAAUL,EAAAA,GAAAA,IAAH,0HASPC,GAAOD,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qIAeJO,GALSP,EAAAA,GAAAA,IAAH,iEAKSA,EAAAA,GAAAA,IAAH,mIAUZQ,EAAcR,EAAAA,GAAAA,IAAH,2K,2BC6BxB,EA3DqB,WAAO,IAAD,IACjBS,GAAWC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAY,oBAAGT,EAASU,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAqB7C,IAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACFJ,EAAU,WADR,mBAGgCK,EAAAA,EAAAA,IAAaX,GAH7C,OAGcY,EAHd,OAIQR,EAASQ,GACTN,EAAU,YALlB,gDAQQO,EAAAA,GAAAA,MAAY,kDACZP,EAAU,YATlB,0DADY,uBAAC,WAAD,wBAcZQ,GACAC,QAAQC,IAAI,mBACf,GAAC,CAAChB,IAEEG,EAAL,CAGA,IAAQc,EAA8Ed,EAA9Ec,YAAaC,EAAiEf,EAAjEe,eAAgBC,EAAiDhB,EAAjDgB,aAAcC,EAAmCjB,EAAnCiB,SAAUC,EAAyBlB,EAAzBkB,OAAQC,EAAiBnB,EAAjBmB,aAC/DC,EAAQC,KAAKC,MAAqB,GAAfN,GACnBO,EAAS,yCAAqCT,GAC9CU,EAAaL,EAAaM,MAAM,EAAG,GACzC,OAAO,gCACS,YAAXvB,IAAwB,SAACwB,EAAA,EAAD,IACb,aAAXxB,IAAyB,4BACrB,SAAC,EAAD,CAAUd,GAAIgB,EAAcf,MAAO,oCACpC,UAACE,EAAD,YACI,gBAAKoC,IAAKJ,EAAWK,IAAI,MACzB,UAAClC,EAAD,YACI,0BAAKqB,EAAL,IAAsBS,EAAtB,QACA,wCAAgBJ,EAAhB,QACA,sCACA,uBAAIH,KACJ,oCACA,SAACxB,EAAD,UACKyB,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACR,uBAAcA,GAAND,EADA,aAMpB,SAAC3C,EAAD,CAAMC,GAAG,OAAT,mBACA,SAACD,EAAD,CAAMC,GAAG,UAAT,sBACA,SAAC,KAAD,QAER,SAAC,KAAD,CAAgB4C,UAAW,IAAMC,SAAS,gBA5B7C,CA6BJ,C","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const BLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { BLink } from \"./BackLink.styled\";\n\nconst BackLink = ({ to, label }) => {\n  return (\n    <BLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {label}\n    </BLink>\n  );\n};\n\nexport default BackLink;","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\n\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n`;\n\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n`;\n\n\n\nexport const Poster = styled.img`\n  height: 300px;\n  margin-right: 20px;\n`;\n\nexport const GenreWrapper = styled.div`\n  display: flex;\n  p:not(:last-child) {\n    margin-right: 20px;\n  }\n  p {\n    margin-top: 0px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  margin-left: 20px;\n  box-shadow: 0px -4px 4px -4px rgba(34, 60, 80, 0.4) inset;\n  padding-bottom: 4px;\n  li {\n    margin-bottom: 10px;\n  }\n`;","import BackLink from \"components/BackLink\";\nimport { useState } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Link, Wrapper, InfoWrapper, GenreWrapper} from \"./MovieDetails.styled\";\nimport { getMovieById } from '../../services/api'\nimport { useEffect } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Loader from \"components/Loader\";\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const {movieId} = useParams()\n    const [movie, setMovie] = useState(null);\n    const [status, setStatus] = useState('idle');\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n   \n    useEffect(() => {\n        async function renderMovieById() {\n      setStatus('pending');  \n            try {\n                const movieById = await getMovieById(movieId);\n                setMovie(movieById);\n                setStatus('resolved');\n                \n            } catch (error) {\n                toast.error('Something went wrong. Please, reload the page.');\n                setStatus('rejected');\n            }\n        }\n\n        renderMovieById();\n        console.log(\"dsgjkytycdshbcka\")\n    },[movieId]);\n\n    if (!movie) {\n        return\n    }\n    const { poster_path, original_title, vote_average, overview, genres, release_date } = movie\n    const scope = Math.round(vote_average * 10);\n    const posterUrl = `https://image.tmdb.org/t/p/w200${poster_path}`;\n    const releseYear = release_date.slice(0, 4)\n    return <>\n        {status === 'penging' && <Loader />}\n        {status === 'resolved' && <div>\n             <BackLink to={backLinkHref} label={\"назад\"} />  \n            <Wrapper>\n                <img src={posterUrl} alt=\"\" />\n                <InfoWrapper>\n                    <h2>{original_title}({releseYear})</h2>\n                    <p>User Score: {scope}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <GenreWrapper>\n                        {genres.map(({ id, name }) => (\n                            <p key={id}>{ name }</p>\n                        ))}\n                    </GenreWrapper>\n                </InfoWrapper>    \n            </Wrapper>\n                <Link to=\"cast\">Cast</Link>\n                <Link to=\"reviews\">Reviews</Link>\n                <Outlet/>\n        </div>}\n        <ToastContainer autoClose={3000} position=\"top-right\" /></>\n}\n\nexport default MovieDetails;"],"names":["BLink","styled","Link","to","label","size","Wrapper","NavLink","GenreWrapper","InfoWrapper","location","useLocation","movieId","useParams","useState","movie","setMovie","status","setStatus","backLinkHref","state","from","useEffect","getMovieById","movieById","toast","renderMovieById","console","log","poster_path","original_title","vote_average","overview","genres","release_date","scope","Math","round","posterUrl","releseYear","slice","Loader","src","alt","map","id","name","autoClose","position"],"sourceRoot":""}