{"version":3,"file":"static/js/867.b4ffa6f3.chunk.js","mappings":"+PAgDA,EA3CkB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+BC,EAAAA,EAAAA,IAAiBN,GAFhD,OAEcO,EAFd,OAGQH,EAAQG,GAHhB,wGADY,uBAAC,WAAD,wBAaZC,EACH,GAAC,CAACR,IAEEG,GAQE,0BACH,wBACKA,EAAKA,KAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,2BACI,gBAAKC,IAAG,yCAAoCF,GAAgBG,IAAG,UAAKJ,MACpE,kCAAUA,MACV,uCAAeE,OAHVH,EADE,SATZ,0BACK,wEAkBnB,C","sources":["components/MovieCast/MovieCast.jsx"],"sourcesContent":["import { getMovieCastById } from \"services/api\";\nimport { useState, useEffect} from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nconst MovieCast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n\n   \n    useEffect(() => {\n        async function renderCastById() {\n            try {\n                const castById = await getMovieCastById(movieId);\n                setCast(castById);\n                \n            } catch (error) {\n                // console.log('reject movie')\n                // toast.error('Something went wrong. Please, reload the page.');\n                // setStatus('rejected');\n            }\n        }\n\n        renderCastById();\n    },[movieId]);\n    \n    if (!cast) {\n        return <div>\n                    <p>We haven`t casts to this movie ðŸ™ƒ</p>\n              </div>\n    }\n\n\n\n    return <div>\n        <ul>\n            {cast.cast.map(({ id, name, profile_path, character }) => (\n                <li key={id}>\n                    <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={`${name}`} />\n                    <p>Name: {name}</p>\n                    <p>Character: {character}</p>\n\n                </li>\n            ))}\n        </ul>\n    </div>\n}\n\nexport default MovieCast;"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getMovieCastById","castById","renderCastById","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}